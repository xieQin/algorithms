// 数据流中的中位数
// 如何得到一个数据流中的中位数，如果总数为奇数，则中位数就是所有值排序后位于中间的数
// 如果总数为偶数，则中位数就是所有值排序后中间两个数的平均值

const fingMiddle = A => {
  
}
// 分别使用无排序数组、排序数组、排序的链表、二叉搜索树、AVL树、最大堆和最小堆等不同数据结构时的时间复杂度
// 数据结构      插入的时间复杂度       得到中位数的时间复杂度
// 无排序数组     O(1)                O(n)
// 排序数组      O(n)                 O(1)
// 排序的链表     O(n)                O(1)
// 二叉搜索树    平均O(logn)最差O(n)   评价O(logn)，最差O(n)
// AVL树        O(logn)              O(1)
// 最大堆和最小堆 O(logn)              O(1)